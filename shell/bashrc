#!/bin/bash
# Brought from gugod's perlbrew.
# Authors:
#   - Yo-An Lin
#   - MÃ¡rcio Almada

# phpswitch defaults:
# PHPSWITCH_HOME: contains the phpswitch config (for users)
# PHPSWITCH_ROOT: contains installed php(s) and php source files.
# PHPSWITCH_SKIP_INIT: if you need to skip loading config from the init file.
# PHPSWITCH_PHP:  the current php version.
# PHPSWITCH_PATH: the bin path of the current php.
# PHPSWITCH_SYSTEM_PHP: the path to the system php binary.

[[ -z "$PHPSWITCH_ROOT" ]] && export PHPSWITCH_ROOT="$HOME/.phpswitch"
[[ -z "$PHPSWITCH_HOME" ]] && export PHPSWITCH_HOME="$HOME/.phpswitch"

# The minimal PHP version that Phpswitch supports as interpreter
MIN_PHP_VERSION="7.2.0"
MIN_PHP_VERSION_ID=70200

# Returns the absolute path corresponding to the command excluding the alias
function __phpswitch_which()
{
    command which "$1"
}

# Executes the given command via the PHP implementation
function __phpswitch_php_exec()
{
    local cmd

    # Check if we are in a Phpswitch source directory (this is only for development)
    if [[ -e bin/phpswitch ]] ; then
        cmd=bin/phpswitch
    else
        cmd="$(__phpswitch_which phpswitch)"
    fi

    # Force the usage of the system PHP interpreter if it's set
    if [[ -n "$PHPSWITCH_SYSTEM_PHP" ]] ; then
        command "$PHPSWITCH_SYSTEM_PHP" "$cmd" "$@"
    else
        command "$cmd" "$@"
    fi
}

# Normalizes a PHP build by adding the "php-" prefix if it's missing
function __phpswitch_normalize_build()
{
    if [[ ! -d "$PHPSWITCH_ROOT/php/$1" && "$1" =~ ^([[:digit:]]+\.){2}[[:digit:]]+(-dev|((alpha|beta|RC)[[:digit:]]+))?$ ]] ; then
        echo "php-$1"
    else
        echo "$1"
    fi
}

# Returns the PHP binary path for a given version
function __phpswitch_get_version_bin()
{
    if [[ ! "$1" == /* ]] ; then
        echo "$PHPSWITCH_ROOT/php/$(__phpswitch_normalize_build $1)/bin/php"
    else
        echo "$1"
    fi
}

# Validates the PHP binary that is to be used as interpreter
function __phpswitch_validate_interpreter()
{
    if [[ -d "$1" ]] ; then
        echo "$1 is a directory"
        return 1
    fi

    if [[ ! -f "$1" ]] ; then
        echo "$1 not found"
        return 1
    fi

    if [[ ! -x "$1" ]] ; then
        echo "$1 is not executable"
        return 1
    fi

    local PHP_VERSION_ID=$(command "$1" -r "echo PHP_VERSION_ID;")

    if [[ $? -ne 0 ]] ; then
        return 1
    fi

    if [[ $PHP_VERSION_ID -lt $MIN_PHP_VERSION_ID ]] ; then
        echo "Only PHP $MIN_PHP_VERSION or newer can be used as Phpswitch interpreter"
        return 1
    fi
}

# Checks whether the given PHP build can be currently used or switched to
function __phpswitch_can_use_build()
{
    if [[ ! -z "$PHPSWITCH_SYSTEM_PHP" ]] ; then
        # Can use any version since the system interpreter is set
        return
    fi

    __phpswitch_validate_interpreter "$(__phpswitch_get_version_bin $1)"

    if [[ $? -ne 0 ]] ; then
        echo "The system interpreter is not currently set"
        echo "Please execute 'phpswitch system' using PHP $MIN_PHP_VERSION or newer before using an older one"
        return 1
    fi
}

function __phpswitch_set_path()
{
    local PATH_WITHOUT_PHPSWITCH

    if [[ -n "$PHPSWITCH_ROOT" ]] ; then
        PATH_WITHOUT_PHPSWITCH=$(p=$(echo $PATH | tr ":" "\n" | grep -v "^$PHPSWITCH_ROOT" | tr "\n" ":"); echo ${p%:})
    else
        PATH_WITHOUT_PHPSWITCH=$PATH
    fi

    if [[ -z "$PHPSWITCH_PATH" ]]
    then
        export PATH=$PATH_WITHOUT_PHPSWITCH
    else
        export PATH=$PHPSWITCH_PATH:$PATH_WITHOUT_PHPSWITCH
    fi
}

function __phpswitch_load_user_config()
{
    # load user-defined config
    if [[ -f $PHPSWITCH_HOME/init ]]; then
        . $PHPSWITCH_HOME/init
        __phpswitch_set_path
    fi
}

if [[ -z "$PHPSWITCH_SKIP_INIT" ]]; then
    __phpswitch_load_user_config
fi

[[ -e "$PHPSWITCH_ROOT" ]] || mkdir "$PHPSWITCH_ROOT"
[[ -e "$PHPSWITCH_HOME" ]] || mkdir "$PHPSWITCH_HOME"

# When setting lookup prefix, the alias name will be translated into the real
# path.
#
# Homebrew uses it's own prefix system with cellars, it's more dynamic then
# others.
#
# Detect package system automatically
function __phpswitch_set_lookup_prefix ()
{
    case $1 in
        debian|ubuntu|linux)
            # echo /usr/lib/x86_64-linux-gnu:/usr/lib/i386-linux-gnu
            echo /usr
        ;;
        macosx)
            echo /usr
        ;;
        macports)
            echo /opt/local
        ;;
        homebrew)
            # TODO: make this more dynamic. with brew --prefix call.
            echo /usr/local/opt:/usr/local
        ;;
        *)
            if [[ -e $1 ]] ; then
                echo $1
            else
                for dir in /opt/local /usr/local/Cellar /usr/local /usr ; do
                    if [[ -e $dir ]] ; then
                        echo $dir
                        return
                    fi
                done
            fi
        ;;
    esac
}

function phpswitch ()
{
    local short_option
    if [[ `echo $1 | awk 'BEGIN{FS=""}{print $1}'` = '-' ]]
    then
        short_option=$1
        shift
    else
        short_option=""
    fi

    case $1 in
        use)
            if [[ -z "$2" ]] ; then
                if [[ -z "$PHPSWITCH_PHP" ]]
                then
                    echo "Currently using system php"
                else
                    echo "Currently using $PHPSWITCH_PHP"
                fi

                return
            fi

            if ! output="$(__phpswitch_php_exec env $(__phpswitch_normalize_build $2))"; then
                echo "$output"
                return 1
            fi

            eval "$output"
            __phpswitch_set_path
            ;;
        cd-src)
            local SOURCE_DIR=$PHPSWITCH_HOME/build/$PHPSWITCH_PHP
            if [[ -d $SOURCE_DIR ]] ; then
                builtin cd $SOURCE_DIR
            fi
            ;;
        switch)
            if [[ -z "$2" ]]; then
                echo "Please specify the php version."
                return 1
            fi

            __phpswitch_reinit $(__phpswitch_normalize_build $2)
            ;;
        lookup-prefix)
            if [[ -z "$2" ]] ; then
                if [[ -n $PHPSWITCH_LOOKUP_PREFIX ]] ; then
                    echo $PHPSWITCH_LOOKUP_PREFIX
                fi
            else
                export PHPSWITCH_LOOKUP_PREFIX=$(__phpswitch_set_lookup_prefix $2)
                echo $PHPSWITCH_LOOKUP_PREFIX
                __phpswitch_update_config
            fi
            ;;
        cd)
            case $2 in
                var)
                    local chdir=$PHPSWITCH_ROOT/php/$PHPSWITCH_PHP/var
                    ;;
                etc)
                    local chdir=$PHPSWITCH_ROOT/php/$PHPSWITCH_PHP/etc
                    ;;
                dist)
                    local chdir=$PHPSWITCH_ROOT/php/$PHPSWITCH_PHP
                    ;;
                build)
                    local chdir=$PHPSWITCH_ROOT/build/$PHPSWITCH_PHP
                    ;;
                *)
                    echo "$2 not found"
                    return 0
                ;;
            esac
            echo "Switching to $chdir, run 'cd -' to go back."
            builtin cd $chdir
            return 0
            ;;
        each)
            shift
            __phpswitch_each "$@"
            ;;
        fpm)
            if ! [[ -z $3 ]]; then
                PHP_BUILD=$3
            else
                PHP_BUILD=${PHPSWITCH_PHP}
            fi

            mkdir -p ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/var/run
            PHPFPM_BIN=${PHPSWITCH_ROOT}/php/${PHP_BUILD}/sbin/php-fpm
            PHPFPM_PIDFILE=${PHPSWITCH_ROOT}/php/${PHP_BUILD}/var/run/php-fpm.pid

            function fpm_start()
            {
              echo "Starting php-fpm..."
              local regex="^php-5\.2.*"

              if [[ ${PHP_BUILD} =~ ${regex} ]]; then
                ${PHPFPM_BIN} start
              else
                ${PHPFPM_BIN} --php-ini ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/fpm/php.ini \
                  --fpm-config ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/php-fpm.conf \
                  --pid ${PHPFPM_PIDFILE} \
                  "$@"
              fi

              if [[ $? != "0" ]] ; then
                echo "php-fpm start failed."
              fi
            }
            function fpm_stop()
            {
              local regex="^php-5\.2.*"

              if [[ ${PHPSWITCH_PHP} =~ ${regex} ]]; then
                ${PHPFPM_BIN} stop
              elif [[ -e ${PHPFPM_PIDFILE} ]] ; then
                echo "Stopping php-fpm..."
                kill $(cat ${PHPFPM_PIDFILE})
                rm -f ${PHPFPM_PIDFILE}
              fi
            }
            case $2 in
                start)
                    fpm_start "${@:4}"
                    ;;
                stop)
                    fpm_stop
                    ;;
                setup)
                    __phpswitch_php_exec $short_option "$@"
                    ;;
                restart)
                    fpm_stop
                    fpm_start "${@:4}"
                    ;;
                current)
                    if [[ -f $PHPFPM_PIDFILE ]] ; then
                        ps ux -p "$(cat $PHPFPM_PIDFILE)"
                    fi
                    ;;
                module)
                    $PHPFPM_BIN --php-ini ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/fpm/php.ini \
                            --fpm-config ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/php-fpm.conf \
                            -m | less
                    ;;
                info)
                    $PHPFPM_BIN --php-ini ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/fpm/php.ini \
                            --fpm-config ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/php-fpm.conf \
                            -i
                    ;;
                config)
                    if [[ -n $EDITOR ]] ; then
                        $EDITOR ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/php-fpm.conf
                    else
                        echo "Please set EDITOR environment variable for your favor."
                        nano ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/php-fpm.conf
                    fi
                    ;;
                which)
                    echo $PHPFPM_BIN
                    ;;
                help)
                    $PHPFPM_BIN --php-ini ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/fpm/php.ini \
                            --fpm-config ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/php-fpm.conf --help
                    ;;
                test)
                    $PHPFPM_BIN --php-ini ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/fpm/php.ini \
                            --fpm-config ${PHPSWITCH_ROOT}/php/${PHP_BUILD}/etc/php-fpm.conf --test
                    ;;
                *)
                    echo "Usage: phpswitch fpm [start|stop|restart|module|test|config|setup|info|current|which|help]"
                    ;;
            esac
            ;;
        info)
            __phpswitch_php_exec info | php
            ;;
        off)
            unset PHPSWITCH_PHP
            unset PHPSWITCH_PATH
            eval $(__phpswitch_php_exec env)
            __phpswitch_set_path
            ;;
        switch-off)
            unset PHPSWITCH_PHP
            unset PHPSWITCH_PATH
            eval $(__phpswitch_php_exec env)
            __phpswitch_reinit
            echo "phpswitch is switched off."
            ;;
        system)
            if [[ -z "$2" ]] ; then
                __phpswitch_php_exec system
            else
                local bin="$(__phpswitch_get_version_bin $2)"

                __phpswitch_validate_interpreter "$bin" || return 1

                export PHPSWITCH_SYSTEM_PHP="$bin"
                __phpswitch_update_config
            fi
            ;;
        system-off)
            __phpswitch_validate_interpreter "$(__phpswitch_which php)"

            if [[ $? -ne 0 ]] ; then
                echo "The currently used PHP build $PHPSWITCH_PHP cannot be used as Phpswitch interpreter"
                echo "Please execute `phpswitch switch` using PHP $MIN_PHP_VERSION or newer before switching the system interpreter off"
                return 1
            fi

            unset PHPSWITCH_SYSTEM_PHP
            __phpswitch_update_config
            ;;
        rehash)
            echo "Rehashing..."
            . ~/.phpswitch/bashrc
            ;;
        purge)
            if [[ -z "$2" ]]
            then
                __phpswitch_php_exec help
            else
                shift
                __phpswitch_purge "$@"
            fi
            ;;
        *)
            __phpswitch_php_exec $short_option "$@"
            ;;
    esac

    local exit_status=$?

    if [[ $exit_status -ne 0 ]]; then
        return $exit_status
    fi

    hash -r
}

function __phpswitch_update_config ()
{
    if ! output="$(__phpswitch_php_exec env $(__phpswitch_normalize_build $1))"; then
        echo "$output"
        return 1
    fi

    (
        echo "# DO NOT EDIT THIS FILE"
        echo "$output"
    ) > "$PHPSWITCH_HOME/init"

    . "$PHPSWITCH_HOME/init"
}

function __phpswitch_reinit ()
{
    __phpswitch_update_config "$@" && __phpswitch_set_path
}

function __phpswitch_each()
{
    local result=0

    current="$PHPSWITCH_PHP"
    for build in ${PHPSWITCH_ROOT}/php/* ; do
        if [ -x "$build/bin/php" ]; then
            phpswitch use $(basename "$build")
            eval "$@" || result=$?
        fi
    done;

    if ! [[ -z "$current" ]]
        then
            phpswitch use $current
        else
            phpswitch off
    fi

    return $result
}

function __phpswitch_purge()
{
    local result=0

    for arg in "$@"
    do
        __phpswitch_purge_build "$arg" || result=$?
    done

    return $result
}

function __phpswitch_purge_build ()
{
    local PHP_BUILD=$(__phpswitch_normalize_build $1)

    if [[ "$PHP_BUILD" = "$PHPSWITCH_PHP" ]]
    then
        echo "php version: $PHP_BUILD is already in use."
        return 1
    fi

    local bin="$(__phpswitch_get_version_bin $PHP_BUILD)"

    if [[ "$bin" = "$PHPSWITCH_SYSTEM_PHP" ]] ; then
        echo "PHP build $PHP_BUILD is used as the system interpreter"
        return 1
    fi

    _PHP_BIN_PATH=$PHPSWITCH_ROOT/php/$PHP_BUILD

    if [ ! -d $_PHP_BIN_PATH ]; then
        echo "php version: $PHP_BUILD not installed."
        return 1
    fi

    _PHP_SOURCE_FILE=$PHPSWITCH_ROOT/build/$PHP_BUILD.tar.bz2
    _PHP_BUILD_PATH=$PHPSWITCH_ROOT/build/$PHP_BUILD

    rm -fr $_PHP_SOURCE_FILE $_PHP_BUILD_PATH $_PHP_BIN_PATH

    echo "php version: $PHP_BUILD is removed and purged."

    return 0
}

function phpswitch_current_php_version() {
  if type "php" > /dev/null; then
    local version=$(php -v | grep -E "PHP [578]" | sed 's/.*PHP \([^-]*\).*/\1/' | cut -c 1-6)
    if [[ -z "$PHPSWITCH_PHP" ]]; then
      echo "php:$version-system"
    else
      echo "php:$version-phpswitch"
    fi
  else
     echo "php:not-installed"
  fi
}

if [[ -n "$PHPSWITCH_SET_PROMPT" && "$PHPSWITCH_SET_PROMPT" == "1" ]]; then
    export PS1="\w > \u@\h [\$(phpswitch_current_php_version)]\n\\$ "
fi

# the _phpswitchrc_load will be called after *every simple command* executed in bash,
# this will make the start up process slower if you have many commands to be run in your .bashrc or .zshrc
# so this function simply compares the directory and return if nothing neccessary to do.
#
# here is the description of trap from bash manual page:
#
#   If one of the signals is DEBUG, the list of COMMANDS is executed after
#   every simple command.
#
function _phpswitchrc_load ()
{
    # check if working dir has changed
    if [[ "$PWD" == "$PHPSWITCH_LAST_DIR" ]]; then
        return
    fi
    local curr_dir="$PWD"
    local prev_dir=""
    local curr_fs=0
    local prev_fs=0

    while [[ -n "$curr_dir" && -d "$curr_dir" ]] ; do
        prev_fs=$curr_fs
        curr_fs=$(stat -c %d "$curr_dir" 2>/dev/null)  # GNU version
        if [ $? -ne 0 ]; then
            curr_fs=$(stat -f %d "$curr_dir" 2>/dev/null)  # BSD version
        fi

        # check if top level directory or filesystem boundary is reached
        if [[ "$curr_dir" == "/" ]] || [ -z "$PHPSWITCH_RC_DISCOVERY_ACROSS_FILESYSTEM" -a $prev_fs -ne 0 -a $curr_fs -ne $prev_fs ]; then
            # check if there's a previously loaded .phpswitchrc
            if [[ ! -z "$PHPSWITCH_LAST_RC_DIR" ]]; then
                unset PHPSWITCH_LAST_RC_DIR
                __phpswitch_load_user_config
            fi
            break
        fi

        # check if .phpswitchrc present
        if [[ -r "$curr_dir/.phpswitchrc" ]]; then
            # check if it's not the same .phpswitchrc which was previously loaded
            if [[ "$curr_dir" != "$PHPSWITCH_LAST_RC_DIR" ]]; then
                __phpswitch_load_user_config
                PHPSWITCH_LAST_RC_DIR="$curr_dir"
                source "$curr_dir/.phpswitchrc"
            fi
            break
        fi
        curr_dir=$(dirname "$curr_dir")
    done
    PHPSWITCH_LAST_DIR="$PWD"
}

if [[ -n "$PHPSWITCH_RC_ENABLE" ]]; then
    if [[ -n "$BASH_VERSION" ]]; then
        trap "_phpswitchrc_load" DEBUG
    fi

    # zsh has easy-to-extend cd hooks, so we migth as well use them instead
    # of running _phpswitchrc_load after EVERY command.
    if [[ -n "$ZSH_VERSION" ]]; then
        if [[ -n "$chpwd_functions" ]]; then
            if [[ ${chpwd_functions[(ie)_phpswitchrc_load]} -gt ${#chpwd_functions} ]]; then
                chpwd_functions+=_phpswitchrc_load
            fi
        else
            chpwd_functions=( _phpswitchrc_load )
        fi
    fi
fi
